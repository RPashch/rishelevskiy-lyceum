Практическая часть по инкапсуляции и наследованию.

1. Сделать консольное приложение для работы с системой координат.
Для этого нужно будет создать класс Point. Которые будет содержать 2 поля - координаты по оси х и у (значения по-умолчанию будут - 0 и 0).
В классе помимо двух конструкторов также должны быть методы getX и getY, up, left, right, down и printCoordinates.

up, left, right, down - через эти методы будет проходить взаимодействие с объектом, а именно изменение его состояния.
т.е. если пользователь вводит up 20, то из main метода будет происходить вызов point.up(20)  (где point - это ссылка на ваш объект)

Работа приложения должна происходить до тех пор, пока пользователь не введёт слово stop.

После этого должны быть выведены текущие координаты (можно воспользоваться методом point.printCoordinates())

Также должно происходить логгирование при выполнении любой команды up, left, right, down.
Из примера ввыше (где юзер ввёл up 20), то должно быть что-то типа - "точка перемещается на 20 ед. по оси у" и т.д.


2. Сделать абсрактный класс Посетитель(Visitor) и два дочерних класса Студент и Преподаватель.
Поля для студента - айдишник, имя, возраст, курс
Поля для преподавателя - айдишник, имя, возраст, предмет

Какие поля вынести в класс-родитель вам нужно будет решить (обычно это те поля, которые объеденяеют две группы).
Сделать в классе Посетителе также методы доступа(геттеры и сеттеры) к этим полям.
Айдишник изменять нельзя, он должен создаваться при инициализации объекта (можете использовать статик поле для этого, как вариант)
Класс посетитель должен иметь также абстракный класс doWork.

Сделать класс-родитель Учреждение(Foundation) и его, пока единственный, класс-наследник Библиотека.
В Учреждении должно быть четыре поля - по массиву для объектов класса Студент и Преподаватель, название учреждение и общее кол-во посадочных мест.
Библиотека должен иметь такие методы:
receiveVisitor(Student student)
receiveVisitor(Teacher teacher)
getCapacity() - должно вернуть кол-во всех посадочных мест
getVisitorsCount() - должно вернуть кол-во людей в заведении
serve() - должен быть абстрактным, и он его реализация будет сделана в классе Библиотека.

"А какая реализация должна быть?" - спросите вы.
А что обычно делают в библиотеке - читают или ищут какую-то инфу, в общем люди работают (ну большинство, по крайней мере).
Нужно будет в этом методе, пройтись циклом (может будет и больше чем один цикл)
по двум массивам и у каждого Student или Teacher будет вызван метод doWork() в этих (или этом) циклах

Но doWork() тоже нужно будет реализовать в соответсвтующих классах наследниках (Student и Teacher).
А вот чем занимаются эти две группы людей в библиотеках вам уже известно.
Достаточно будет вывода на консоль через system.out.println ("Я из 4 курса, мне много нужно чего найти.") - примерный вывод для студента будет
или для преподавателя ("Я преподаватель предмета астрономия, но я пришёл сюда посмотреть чем занимаются студенты")

Также не забывайте что в методе receiveVisitor будет не только добавляться наш посетитель в массив,
 но и также нужно будет на него ещё надеть маску при входе
 (достаточно вывода на консоль system.out.println("Простите, Вася, но оденьте плиз маску"); ).

Также сделать метод который будет извлекать случайного посетителя (для Студента и для Преподавателя)

Это достаточно простое задание. Делайте ПР-ы, всё как обычно, не забывайте писать свои фамилии и номер ДЗ (это пускай будет иметь номер 6)





